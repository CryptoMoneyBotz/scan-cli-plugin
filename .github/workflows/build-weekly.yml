name: Weekly Build
on:
  schedule:
    - cron: "0 0 * * SUN"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    defaults:
      run:
        shell: bash
    env:
      GO111MODULE: "on"

    steps:
      - name: Install Docker CLI
        if: ${{ matrix.os == 'macos-latest' }}
        # Only the CLI is needed to run docker-scan e2e
        run: brew install docker

      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
        id: go

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2

      - name: Golang cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download binaries
        run: make -f builder.Makefile download

      - name: Build binary and run e2e tests
        env:
          E2E_TEST_AUTH_TOKEN: ${{ secrets.E2E_TEST_AUTH_TOKEN }}
          E2E_HUB_URL: ${{ secrets.E2E_HUB_URL }}
          E2E_HUB_USERNAME: ${{ secrets.E2E_HUB_USERNAME }}
          E2E_HUB_TOKEN_TOKEN: ${{ secrets.E2E_HUB_TOKEN_TOKEN }}
        run: make -f builder.Makefile build test-unit e2e
      - name: ON SUCCESS - Slack notification
        if: ${{ success() }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":":heavy_check_mark: docker scan cli plugin Weekly Build SUCCESS on ${{ matrix.os}}"}' ${{ secrets.SLACK_WEBHOOK }}
      - name: ON FAILURE - Slack notification
        if: ${{ failure() }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"@here :no_entry_sign: docker scan cli plugin Weekly Build FAILED on ${{ matrix.os}}"}' ${{ secrets.SLACK_WEBHOOK }}
      - name: ON CANCELLED - Slack notification
        if: ${{ cancelled() }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":":bangbang: docker scan cli plugin Weekly Build CANCELED on ${{ matrix.os}}"}' ${{ secrets.SLACK_WEBHOOK }}
